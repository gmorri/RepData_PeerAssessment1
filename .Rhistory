dob <- c(1, 27, 1991)
name <- c("Gordon, "A", "Morrisette")
name <- c("Gordon", "A", "Morrisette")
list1 <- c(dob, name)
list1[dob]
list1[[dob]]
list1$dob
list1[1:3]
list1[4:6]
marks <- c(99,95,90,70)
subjects <- c("Maths", "Physics", "Chemistry", "Biology")
cbind(subjects,marks)
df <- cbind(subjects,marks)
df1 <- rbind(subjects, marks)
df1
df[subjects]
df[3,2]
df[1,]
df[,1]
mat <- matrix[1:16, 4, 4]
mat <- matrix[1:16, 4]
seq1 <- 1:16
mat <- matrix[seq1, 4]
m <- matrix[seq1, 4]
mat <- matrix(seq1,4]
mat <- matrix(seq1,4)
mat
colnames(mat) <- subjects
mat
matT <- t(mat)
matT
matT <- matT^2
matT <- t(mat)
matT
sqr <- matT^2
sqr
Print("Hi, I am " + name[1] + " " + name[3])
print("Hi, I am " + name[1] + " " + name[3])
cat("Hi, I am", name[1], name[3], file ="", sep = " ")
u <- c(10,20,30)
v <- c(1,2,3,4,5,6,7,8,9)
u+v
q()
x <- 4
class(x)
x <- c(4,TRUE)
class(x)
x
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
x <0 list(2, "a","b", TRUE)
x <- list(2, "a","b", TRUE)
x[[1]]
x <0 1:4
x <- 1:4
y <- 2:3
x+y
z <- x+y
class(z)
x <- c(3,5,1,10,12,6)
x1 <- x
x1[x>6] <- 0
x1
x1 <- x
x[x %in% 1:5] <- 0
x
x <- read.csv("C:/Coursera/hw1_data.csv")
colnames(x)
x[1:2,]
nrows(x)
dim(x)
x[152:153,]
x[47,]
y <- is.na(x[,"Ozone"])
z <- which(is.na(x$Ozone))
length(z)
colMeans(x[,"Ozone"], na.rm=TRUE)
colmeans(x,na.rm=TRUE)
colmeans(x)
colMeans(x,na.rm=TRUE)
L = (x$Ozone > 31 & x$Temp > 90)
new = x[L,]
colMeans(new)
colMeans(new, na.rm=TRUE)
L1 = (x$Month == 6)
new1 = x[L1,]
colMeans(new1, na.rm=TRUE)
L2 = (x$Month == 5)
new2 = x[L2,]
max(new2$Ozone)
max(new2$Ozone, na.rm=TRUE)
env.path
env.path <- "/usr/bin"
f1 <- c("x13ashtml.exe","x13as.exe")
x13.bin <- file.path(env.path,f1[frepl("^x13ashtml$",f1,ignore.case=TRUE)])
x13.bin <- file.path(env.path,f1[grepl("^x13ashtml$",f1,ignore.case=TRUE)])
x13.bin <- file.path(env.path,"x13as")
x13.bin <- file.path(env.path,f1[grepl("x13ashtml$",f1,ignore.case=TRUE)])
x13.bin <- file.path(env.path,f1[grepl("x13ashtml",f1,ignore.case=TRUE)])
set.seed(1)
rpois(5,2)
source('C:/Users/Mu Sigma/Desktop/Fun/1410CatchmentArea/Network/d3new.R')
d3new("C:/Users/Mu Sigma/Documents/R/pizza/Brand_network.csv",.1)
library(ggplot2)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ wind | factor(Month), data=airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data=airquality)
print(p)
qplot(Wind,Ozone, data=airquality,facets=.~factor(Month))
airquality=transform(airquality, Month = factor(Month))
qplot(Wind,Ozone, data=airquality,facets=.~Month)
g <- ggplot(movies, aes(votes,ratings))
print(g)
qplot(votes,rating, data=movies)
qplot(votes,rating, data=movies)
qplot(votes,rating, data=movies) + geom_smooth()
qplot(votes,rating, data=movies) + stats_smooth("loess")
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("rtoken","e243c312bd3f3209e776cce44d903a716635cbe0")
myapp <- oauth_app("github","e243c312bd3f3209e776cce44d903a716635cbe0")
myapp <- oauth_app("2b87479c4f81fdba0fc8","749c2e10f98996a5e6bd1b78bf60ed6a6440f67a")
myapp <- oauth_app("github","2b87479c4f81fdba0fc8","749c2e10f98996a5e6bd1b78bf60ed6a6440f67a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token=github_token)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
setwd("C:/Users/Mu Sigma/Documents/GitHub/RepData_PeerAssessment1")
activity_data <- read.csv(activity.csv)
activity_data <- read.csv("activity.csv")
View(activity_data)
activity_data[,2] <- as.Date(activity_data$date, format = "%Y-%m-%d")
View(activity_data)
activity_data <- read.csv("activity.csv")
activity_data$date <- as.Date(activity_data$date, format = "%Y-%m-%d")
hist_data <- tapply(activity_data$steps, activity_data$date, sum)
hist_data_nona <- tapply(activity_data$steps, activity_data$date, sum, na.rm=TRUE)
hist(hist_data_nona)
mean(activity_data$steps, na.rm=TRUE)
meedian(activity_data$steps, na.rm=TRUE)
median(activity_data$steps, na.rm=TRUE)
library(rsqldf)
library(sqldf)
steps <- sqldf("select interval, avg(steps) from activity_data where steps is not 'NA' group by interval order by interval")
View(steps)
steps_by_interval <- sqldf("select interval, avg(steps) as avg_steps from activity_data where steps is not 'NA' group by interval order by interval")
lines(steps_by_interval$interval, steps_by_interval$avg_steps, type=l)
lines(steps_by_interval$interval, steps_by_interval$avg_steps, type='l')
lines(steps_by_interval$interval, steps_by_interval$avg_steps, type='l')
plot.new()
lines(steps_by_interval$interval, steps_by_interval$avg_steps, type='l')
plot(steps_by_interval$interval, steps_by_interval$avg_steps, type='n',main=heading)
lines(steps_by_interval$interval, steps_by_interval$avg_steps, type='l')
heading <- "Average Number of Steps by Interval"
plot(steps_by_interval$interval, steps_by_interval$avg_steps, type='n',main=heading)
plot(steps_by_interval$interval, steps_by_interval$avg_steps, type='n',main=heading,xlab="Interval",ylab="Average Number of Steps")
lines(steps_by_interval$interval, steps_by_interval$avg_steps, type='l')
plot(steps_by_interval$interval, steps_by_interval$avg_steps, type='n',main=heading,xlab="Interval",ylab="Average Number of Steps",title="Average Number of Steps by Interval")
heading <- "Average Number of Steps by Interval"
plot(steps_by_interval$interval, steps_by_interval$avg_steps, type='n',main=heading,xlab="Interval",ylab="Average Number of Steps")
lines(steps_by_interval$interval, steps_by_interval$avg_steps, type='l')
View(steps_by_interval)
which.max(steps_by_interval$avg_steps)
steps_by_interval$interval[104]
na.count <- sum(is.na(activity_data$steps))
interval.count <- sqldf("select interval, count(*) from activity_data group by interval order by interval")
View(interval.count)
View(steps_by_interval)
mean_dataset <- steps_by_interval
for (1:60){
mean_dataset <- rbind(mean_dataset,steps_by_interval)
}
for (n in 1:60){
mean_dataset <- rbind(mean_dataset,steps_by_interval)
}
rm(mean_dataset)
mean_dataset <- steps_by_interval
for (n in 1:59){
mean_dataset <- rbind(mean_dataset,steps_by_interval)
}
library(plyr)
replace?
q
?replace
impute.mean <- function(x) replace(x, is.na(x),mean(x.na.rm=TRUE))
activity_data2 <- ddply(activity_data, ~interval, transform, steps=impute.mean(steps))
impute.mean <- function(x) replace(x, is.na(x),mean(x,na.rm=TRUE))
activity_data2 <- ddply(activity_data, ~interval, transform, steps=impute.mean(steps))
View(activity_data2)
activity_data2[order(date,interval),]
activity_data2[order(activity_data$date,activity_data$interval),]
impute.mean <- function(x) replace(x, is.na(x),mean(x,na.rm=TRUE))
activity_data2 <- ddply(activity_data, ~interval, transform, steps=impute.mean(steps))
attach(activity_data2)
activity_data3 <- activity_data2[order(date, interval),]
View(activity_data3)
impute.mean <- function(x) replace(x, is.na(x),mean(x,na.rm=TRUE))
rm(activity_data2)
activity_data2 <- ddply(activity_data, ~interval, transform, steps=impute.mean(steps))
attach(activity_data2)
activity_data3 <- activity_data2[order(date, interval),]
detach(activity_data2)
View(activity_data3)
View(activity_data2)
View(activity_data3)
View(interval.count)
View(activity_data3)
